{% if cookiecutter.include_github_actions == 'yes' %}
name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [20.x]

    steps:
    - uses: actions/checkout@v4

    - name: Setup pnpm
      uses: pnpm/action-setup@v4
      with:
        version: 9

    - name: Use Node.js {% raw -%}${{ matrix.node-version }}{%- endraw %}
      uses: actions/setup-node@v4
      with:
        node-version: {% raw -%}${{ matrix.node-version }}{%- endraw %}
        cache: 'pnpm'

    - name: Install dependencies
      run: pnpm install --frozen-lockfile

    - name: Type check
      run: pnpm type-check

    - name: Lint
      run: pnpm lint

    - name: Test
      run: pnpm test

    - name: Build
      run: pnpm build

  build-and-push:
    needs: test
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'

    permissions:
      contents: read
      id-token: write

    steps:
    - uses: actions/checkout@v4

    - name: Authenticate to Google Cloud
      uses: google-github-actions/auth@v2
      with:
        workload_identity_provider: {% raw -%}${{ secrets.WIF_PROVIDER }}{%- endraw %}
        service_account: {% raw -%}${{ secrets.GCP_SA_EMAIL }}{%- endraw %}

    - name: Set up Cloud SDK
      uses: google-github-actions/setup-gcloud@v2

    - name: Configure Docker to use the gcloud command-line tool as a credential helper
      run: gcloud auth configure-docker

    - name: Build and push Docker image
      run: |
        cd services/{{cookiecutter.service_name}}
        docker build -t gcr.io/{% raw -%}${{ secrets.GCP_PROJECT_ID }}{%- endraw %}/{{cookiecutter.service_name}}:{% raw -%}${{ github.sha }}{%- endraw %} .
        docker push gcr.io/{% raw -%}${{ secrets.GCP_PROJECT_ID }}{%- endraw %}/{{cookiecutter.service_name}}:{% raw -%}${{ github.sha }}{%- endraw %}
        docker tag gcr.io/{% raw -%}${{ secrets.GCP_PROJECT_ID }}{%- endraw %}/{{cookiecutter.service_name}}:{% raw -%}${{ github.sha }}{%- endraw %} gcr.io/{% raw -%}${{ secrets.GCP_PROJECT_ID }}{%- endraw %}/{{cookiecutter.service_name}}:latest
        docker push gcr.io/{% raw -%}${{ secrets.GCP_PROJECT_ID }}{%- endraw %}/{{cookiecutter.service_name}}:latest

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'

    permissions:
      contents: read
      id-token: write

    steps:
    - uses: actions/checkout@v4

    - name: Authenticate to Google Cloud
      uses: google-github-actions/auth@v2
      with:
        workload_identity_provider: {% raw -%}${{ secrets.WIF_PROVIDER }}{%- endraw %}
        service_account: {% raw -%}${{ secrets.GCP_SA_EMAIL }}{%- endraw %}

    - name: Set up Cloud SDK
      uses: google-github-actions/setup-gcloud@v2

    - name: Deploy to Cloud Run
      run: |
        gcloud run deploy {{cookiecutter.service_name}} \
          --image gcr.io/{% raw -%}${{ secrets.GCP_PROJECT_ID }}{%- endraw %}/{{cookiecutter.service_name}}:{% raw -%}${{ github.sha }}{%- endraw %} \
          --region {% raw -%}${{ secrets.CLOUD_RUN_REGION }}{%- endraw %} \
          --platform managed \
          --allow-unauthenticated
{% endif %}